install.packages("TDA")
img1 <- read.table("/home/cimagroup/Documentos/PR experiment/diagramas/example1")
maxscale <- 5> tseq <- seq(0, maxscale, length = 1000)   #domain> Land <- landscape(DiagRips[["diagram"]], dimension = 1, KK = 1, tseq)> Sil <- silhouette(DiagRips[["diagram"]], p = 1, dimension = 1, tseq)
maxscale <- 5
> tseq <- seq(0, maxscale, length = 1000)
tseq <- seq(0, maxscale, length = 1000)
Land <- landscape(DiagRips[["diagram"]], dimension = 1, KK = 1, tseq)
require("TDA")
Land <- landscape(DiagRips[["diagram"]], dimension = 1, KK = 1, tseq)
Land <- landscape(dgm[["diagram"]], dimension = 1, KK = 1, tseq)
Land <- landscape(img1[["diagram"]], dimension = 1, KK = 1, tseq)
img1[:,3] <- 0
img1[1,1]
img1[,1]
img1[,3]
img1[,3] <- 0
img1[,3]
Land <- landscape(img1[["diagram"]], dimension = 0, KK = 1, tseq)
Land <- landscape(img1, dimension = 0, KK = 1, tseq)
plot(tseq, Land, type = "l")
maxscale <- 1
Land <- landscape(img1, dimension = 0, KK = 1, tseq)
plot(tseq, Land, type = "l")
Land <- landscape(img1, dimension = 0, tseq)
Land <- landscape(img1, dimension = 0, kk = 1, tseq)
Land <- landscape(img1, dimension = 0, KK = 1, tseq)
Land
img1
img1[1,1] + img1[2,1]
img1[1,1] + img1[3,1]
Land
Land <- landscape(img1, KK = 1, tseq)
Land <- landscape(img1, dimension = 0, KK = 1, tseq)
Sil <- silhouette(img1, p = 1, dimension = 0, tseq)
Sil
Circle1 <- circleUnif(60)
Circle2 <- circleUnif(60, r = 2) + 3
Circles <- rbind(Circle1, Circle2)
maxscale <- 5
maxdimension <- 1
DiagRips <- ripsDiag(X = Circles, maxdimension, maxscale,+     library = c("GUDHI", "Dionysus"), location = TRUE, printProgress = FALSE)
iagRips <- ripsDiag(X = Circles, maxdimension, maxscale,library = c("GUDHI", "Dionysus"), location = TRUE, printProgress = FALSE)
DiagRips <- ripsDiag(X = Circles, maxdimension, maxscale,library = c("GUDHI", "Dionysus"), location = TRUE, printProgress = FALSE)
View(iagRips)
Land <- landscape(DiagRips[["diagram"]], dimension = 1, KK = 1, tseq)
Land
plot(tseq, Land, type = "l")
DiagRips[["diagram"]]
img1[,3] <- img1[,2]
img1[,2] <- img1[,1]
img1[,1] <- 0
Land2 <- landscape(img1, dimension = 0, KK = 1, tseq)
plot(tseq, Land1, type = "l")
plot(tseq, Land2, type = "l")
img1
maxscale = 1
tseq <-seq(0, maxscale, length = 1000)
plot(tseq, Land2, type = "l")
Sil <- silhouette(img1, p = 1, dimension = 0, tseq)
plot(tseq, Sil, type = "l")
Land2
Sil
plot(img1, rotated = TRUE)
img1
warnings()
DiagRips[["diagram"]]
img1[-1,]
tail(img1[,3])
dim(img1[,3])
dim(img1)
img1[794,3]
img1[793,3]
img1[793,3] <- 1
Sil <- silhouette(img1, p = 1, dimension = 0, tseq)
plot(img1, rotated = TRUE)
plot(tseq, Sil, type = "l")
Land2 <- landscape(img1, dimension = 0, KK = 1, tseq)
plot(tseq, Land2, type = "l")
Land2 <- landscape(img1, dimension = 0, KK = 1, tseq)
plot(tseq, Land2, type = "l")
Land2 <- landscape(img1, dimension = 0, KK = 2, tseq)
plot(tseq, Land2, type = "l")
Land2 <- landscape(img1, dimension = 0, KK = 3, tseq)
plot(tseq, Land2, type = "l")
max(2,3)
install.packages("jpeg")
install.packages("png")
dpois(20, 10, log = FALSE)
poisson.random.sampling(10, 10, 10)
rpois(10, 10)
rpois(20, 10)
plot(x = rpois(20, 10), y = rpois(20, 10))
plot(x = rpois(20, 100), y = rpois(20, 100))
plot(x = rpois(20, 1000), y = rpois(20, 1000))
plot(x = rpois(20, 1000), y = rpois(20, 1000))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
save.image("~/Documentos/a.RData")
source('~/poisson_entropy/generating_pc.R')
install.packages("psych")
source('~/.active-rstudio-document')
x1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
point_cloud
plot(point_cloud)
odd(1)
even(1)
3%2
3/2
res(3/2)
rem(3/2)
3%%2
5%%2
4%%2
comb(x1, y2)
combn(x1, y2)
combn(x1, 2)
expand.grid(x1, y2)
source('~/.active-rstudio-document')
plot(point_cloud)
source('~/.active-rstudio-document')
plot(point_cloud)
y2
dist(point_cloud[1, ], point_cloud[2, ])
point_cloud[1, ]
point_cloud[16, ]
point_cloud[15, ]
point_cloud[9, ]
point_cloud
point_cloud[57, ]
(point_cloud[57, ] - point_cloud[1, ])^2
sum(point_cloud[57, ] - point_cloud[1, ])^2
(sum(point_cloud[57, ] - point_cloud[1, ]))^2
(sum(point_cloud[57, ] - point_cloud[1, ])^2)
(sum(point_cloud[57, ] - point_cloud[1, ]))
(point_cloud[57, ] - point_cloud[1, ])
(point_cloud[57, ] - point_cloud[1, ])^2
sum((point_cloud[57, ] - point_cloud[1, ])^2)
sqrt(sum((point_cloud[57, ] - point_cloud[1, ])^2))
source('~/.active-rstudio-document')
sqrt(sum((point_cloud[57, ] - point_cloud[1, ])^2))
plot(point_cloud)
install.packages("deldir")
source('~/.active-rstudio-document')
x
y
point_cloud[110, ]
point_cloud[,1 ]
point_cloud[, 2]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x1
source('~/.active-rstudio-document')
install.packages("spatstat")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
H
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/poisson_entropy/hex.R')
source('~/poisson_entropy/hex.R')
source('~/poisson_entropy/hex.R')
plot(Diagram[["diagram"]], barcode = TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/poisson_entropy/hex.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
seq_len(dim(DiagAlphaCmplx[["cycleLocation"]][[one[i]]])[1])
dim(DiagAlphaCmplx[["cycleLocation"]][[one[i]]])[1]
DiagAlphaCmplx[["cycleLocation"]][[one[i]]]
DiagAlphaCmplx[["cycleLocation"]]
DiagAlphaCmplx
one
source('~/.active-rstudio-document')
plot(X, col = 1, main = "Representative loop")
seq(along = one)
seq_len(dim(DiagAlphaCmplx[["cycleLocation"]][[one[i]]])[1])
one[1]
DiagAlphaCmplx[["cycleLocation"]]
DiagAlphaCmplx
DiagAlphaCmplx[2]
DiagAlphaCmplx[1]
DiagAlphaCmplx[2]
DiagAlphaCmplx[[2]]
DiagAlphaCmplx[[1]]
source('~/poisson_entropy/hex.R')
source('~/.active-rstudio-document')
DiagAlphaCmplx[[1]]
DiagAlphaCmplx[[2]]
DiagAlphaCmplx[[0]]
DiagAlphaCmplx[[1]]
DiagAlphaCmplx
DiagAlphaCmplx[1]
DiagAlphaCmplx[2]
source('~/.active-rstudio-document')
seq_len(dim(DiagAlphaCmplx[["cycleLocation"]][
DiagAlphaCmplx[["cycleLocation"]][
DiagAlphaCmplx[["cycleLocation"]]
DiagAlphaCmplx[]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
one
one <- 100
for (i in seq(along = one)) {
for (j in seq_len(dim(DiagAlphaCmplx[["cycleLocation"]][[one[i]]])[1])) {
lines(DiagAlphaCmplx[["cycleLocation"]][[one[i]]][j, , ], pch = 19,
cex = 1, col = i + 1)
}
}
plot(X, col = 1, main = "Representative loop")
for (i in seq(along = one)) {
for (j in seq_len(dim(DiagAlphaCmplx[["cycleLocation"]][[one[i]]])[1])) {
lines(DiagAlphaCmplx[["cycleLocation"]][[one[i]]][j, , ], pch = 19,
cex = 1, col = i + 1)
}
}
one
one <- 200
plot(X, col = 1, main = "Representative loop")
for (i in seq(along = one)) {
for (j in seq_len(dim(DiagAlphaCmplx[["cycleLocation"]][[one[i]]])[1])) {
lines(DiagAlphaCmplx[["cycleLocation"]][[one[i]]][j, , ], pch = 19,
cex = 1, col = i + 1)
}
}
one <- 10
plot(X, col = 1, main = "Representative loop")
for (i in seq(along = one)) {
for (j in seq_len(dim(DiagAlphaCmplx[["cycleLocation"]][[one[i]]])[1])) {
lines(DiagAlphaCmplx[["cycleLocation"]][[one[i]]][j, , ], pch = 19,
cex = 1, col = i + 1)
}
}
source('~/.active-rstudio-document')
TRUE and FALSE
TRUE && FALSE
source('~/.active-rstudio-document')
source('~/poisson_entropy/hex.R')
source('~/poisson_entropy/hex.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
one
(DiagAlphaCmplx[["diagram"]][, 3] - DiagAlphaCmplx[["diagram"]][, 2] > 0.2)
(DiagAlphaCmplx[["diagram"]][, 1] == 1) && (DiagAlphaCmplx[["diagram"]][, 3] - DiagAlphaCmplx[["diagram"]][, 2] > 0.2)
(DiagAlphaCmplx[["diagram"]][, 1] == 1) & (DiagAlphaCmplx[["diagram"]][, 3] - DiagAlphaCmplx[["diagram"]][, 2] > 0.2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/poisson_entropy/hex.R')
source('~/poisson_entropy/representative_hex.R')
length(hex)
dim(point_cloud)
source('~/poisson_entropy/hex.R')
dim(point_cloud)
source('~/poisson_entropy/hex.R')
dim(point_cloud)
source('~/poisson_entropy/representative_hex.R')
source('~/poisson_entropy/representative_hex.R')
source('~/poisson_entropy/representative_hex.R')
source('~/poisson_entropy/representative_hex.R')
load("~/poisson_entropy/frame.RData")
View(cells_frame)
X <- rpois(20, 1000)
Y <- rpois(20, 1000)
X
aux <- matrix(c(X, Y), nrow = 20, ncol = 2)
aux
load("~/TDA_epithelial/frame.RData")
View(cells_frame)
load("~/Documentos/a.RData")
View(cells_frame)
load("~/Documentos/a.RData")
library(devtools)
install_github("vqv/ggbiplot")
install.packages("ggbiplot")
1+1
install.package('boot')
install.packages('boot')
install.packages("e1071")
library(e1071)
install.packages('caret')
sum(c(1,2))
aux[["diagram"]]
setwd("~/topological-summaries-for-packed-tissues/1_barcodes")
source('~/topological-summaries-for-packed-tissues/1_barcodes/B_compute_rips.R')
source('~/topological-summaries-for-packed-tissues/1_barcodes/barcode_generator.R')
source('~/topological-summaries-for-packed-tissues/1_barcodes/B_compute_rips.R')
barcodeAux <- barcodesList[[1]]
barcodeAux[['diagram']]
barcodeAux[["diagram"]]
bbarcodesList[[1]]
barcodesList[[1]]
aux <- ipsDiag(X = pcList[[1]], maxdimension = 0, maxscale = 150,
library = c("GUDHI", "Dionysus"))
aux <- RipsDiag(X = pcList[[1]], maxdimension = 0, maxscale = 150, library = c("GUDHI", "Dionysus"))
aux <- ripsDiag(X = pcList[[1]], maxdimension = 0, maxscale = 150, library = c("GUDHI", "Dionysus"))
aux
aux[["diagram"]]
aux[["diagram"]][-1,]
sum(aux[["diagram"]][-1,3] - aux[["diagram"]][-1,2])
(aux[["diagram"]][-1,]/
sum(aux[["diagram"]][-1,3] - aux[["diagram"]][-1,2]))
plot((aux[["diagram"]][-1,]/
sum(aux[["diagram"]][-1,3] - aux[["diagram"]][-1,2])),
barcode = TRUE)
require("TDA")
plot((aux[["diagram"]][-1,]/
sum(aux[["diagram"]][-1,3] - aux[["diagram"]][-1,2])),
barcode = TRUE)
plot((aux[["diagram"]][-1,]/sum(aux[["diagram"]][-1,3] - aux[["diagram"]][-1,2])), barcode = TRUE)
plot((aux[["diagram"]][-1,], barcode = TRUE)
plot((aux[["diagram"]], barcode = TRUE)
plot((aux, barcode = TRUE)
plot(aux, barcode = TRUE)
plot(aux[["diagram"]], barcode = TRUE)
plot(aux[["diagram"]], barcode = TRUE)
require("TDA")
plot(aux[["diagram"]], barcode = TRUE)
aux[["diagram"]][-1,]/sum(aux[["diagram"]][-1,3] - aux[["diagram"]][-1,2])
a = aux[["diagram"]][-1,]/sum(aux[["diagram"]][-1,3] - aux[["diagram"]][-1,2])
plot(a)
plot(a, rotated = TRUE)
plot.diagram(a, rotated = TRUE)
dev.off
dev.off()
plot.diagram(a, rotated = TRUE)
plot.diagram(a, barcode = TRUE)
source('~/topological-summaries-for-packed-tissues/1_barcodes/B_compute_rips.R')
source('~/topological-summaries-for-packed-tissues/1_barcodes/B_compute_rips.R')
source('~/topological-summaries-for-packed-tissues/1_barcodes/B_compute_rips.R')
source('~/topological-summaries-for-packed-tissues/1_barcodes/barcode_generator.R')
source('~/topological-summaries-for-packed-tissues/1_barcodes/B_compute_rips.R')
source('~/topological-summaries-for-packed-tissues/1_barcodes/B_compute_rips.R')
source('~/topological-summaries-for-packed-tissues/2_variables/A_tda_frame.R')
setwd("~/topological-summaries-for-packed-tissues/2_variables")
source('~/topological-summaries-for-packed-tissues/2_variables/A_tda_frame.R')
source('~/topological-summaries-for-packed-tissues/2_variables/C_network_frame.R')
source('~/topological-summaries-for-packed-tissues/3_analysis/boxplot_generator.R')
setwd("~/topological-summaries-for-packed-tissues/3_analysis")
source('~/topological-summaries-for-packed-tissues/3_analysis/boxplot_generator.R')
cells_frame <- data.frame(type, PE.0.sub, PE.1.sub, landscape.0.2.sub,
landscape.0.5.sub, lan.0.05.sub, lan.0.10.sub,
lan.0.15.sub, landscape.1.1.sub, landscape.1.2.sub,
lan.1.03.sub, lan.1.05.sub, max.0.1.1.sub,
max.0.1.2.sub, max.0.1.3.sub, max.0.2.1.sub,
max.0.2.2.sub, max.0.2.3.sub,   MAX.0.2.10.sub,
max.1.1.1.sub, max.1.2.1.sub, max.1.1.2.sub,
MAX.1.1.02.sub, MAX.1.1.03.sub, PE.0.sup, PE.1.sup,
landscape.0.2.sup, lan.0.02.sup, lan.0.03.sup,
landscape.1.1.sup, landscape.1.2.sup, lan.1.02.sup,
max.0.1.1.sup, max.0.1.2.sup, MAX.0.1.02.sup,
max.0.2.1.sup, max.0.2.2.sup, MAX.0.2.02.sup,
max.1.1.1.sup, max.1.2.1.sup, MAX.1.2.02.sup,
MAX.2.2.02.sup, PE.0.rips, len.1, len.2, len.5,
LEN.15, LEN.20, LEN.50, max.0.1.1.rips, LEN.05,
LEN.10, max.0.1.2.rips, max.0.1.3.rips,
MAX.0.1.05.rips, MAX.0.1.10.rips, MAX.0.1.20.rips,
MAX.0.1.50.rips)
path <- paste("frames", as.character(cellNumber), sep="/")
dir.create(path,  showWarnings = FALSE)
save(cells_frame, file = paste(path, "cells_frame.RData", sep="/"))
setwd("~/topological-summaries-for-packed-tissues/1_barcodes")
cells_frame <- data.frame(type, PE.0.sub, PE.1.sub, landscape.0.2.sub,
landscape.0.5.sub, lan.0.05.sub, lan.0.10.sub,
lan.0.15.sub, landscape.1.1.sub, landscape.1.2.sub,
lan.1.03.sub, lan.1.05.sub, max.0.1.1.sub,
max.0.1.2.sub, max.0.1.3.sub, max.0.2.1.sub,
max.0.2.2.sub, max.0.2.3.sub,   MAX.0.2.10.sub,
max.1.1.1.sub, max.1.2.1.sub, max.1.1.2.sub,
MAX.1.1.02.sub, MAX.1.1.03.sub, PE.0.sup, PE.1.sup,
landscape.0.2.sup, lan.0.02.sup, lan.0.03.sup,
landscape.1.1.sup, landscape.1.2.sup, lan.1.02.sup,
max.0.1.1.sup, max.0.1.2.sup, MAX.0.1.02.sup,
max.0.2.1.sup, max.0.2.2.sup, MAX.0.2.02.sup,
max.1.1.1.sup, max.1.2.1.sup, MAX.1.2.02.sup,
MAX.2.2.02.sup, PE.0.rips, len.1, len.2, len.5,
LEN.15, LEN.20, LEN.50, max.0.1.1.rips, LEN.05,
LEN.10, max.0.1.2.rips, max.0.1.3.rips,
MAX.0.1.05.rips, MAX.0.1.10.rips, MAX.0.1.20.rips,
MAX.0.1.50.rips)
path <- paste("frames", as.character(cellNumber), sep="/")
dir.create(path,  showWarnings = FALSE)
save(cells_frame, file = paste(path, "cells_frame.RData", sep="/"))
setwd("~/topological-summaries-for-packed-tissues/2_variables")
cells_frame <- data.frame(type, PE.0.sub, PE.1.sub, landscape.0.2.sub,
landscape.0.5.sub, lan.0.05.sub, lan.0.10.sub,
lan.0.15.sub, landscape.1.1.sub, landscape.1.2.sub,
lan.1.03.sub, lan.1.05.sub, max.0.1.1.sub,
max.0.1.2.sub, max.0.1.3.sub, max.0.2.1.sub,
max.0.2.2.sub, max.0.2.3.sub,   MAX.0.2.10.sub,
max.1.1.1.sub, max.1.2.1.sub, max.1.1.2.sub,
MAX.1.1.02.sub, MAX.1.1.03.sub, PE.0.sup, PE.1.sup,
landscape.0.2.sup, lan.0.02.sup, lan.0.03.sup,
landscape.1.1.sup, landscape.1.2.sup, lan.1.02.sup,
max.0.1.1.sup, max.0.1.2.sup, MAX.0.1.02.sup,
max.0.2.1.sup, max.0.2.2.sup, MAX.0.2.02.sup,
max.1.1.1.sup, max.1.2.1.sup, MAX.1.2.02.sup,
MAX.2.2.02.sup, PE.0.rips, len.1, len.2, len.5,
LEN.15, LEN.20, LEN.50, max.0.1.1.rips, LEN.05,
LEN.10, max.0.1.2.rips, max.0.1.3.rips,
MAX.0.1.05.rips, MAX.0.1.10.rips, MAX.0.1.20.rips,
MAX.0.1.50.rips)
path <- paste("frames", as.character(cellNumber), sep="/")
dir.create(path,  showWarnings = FALSE)
save(cells_frame, file = paste(path, "cells_frame.RData", sep="/"))
source('~/topological-summaries-for-packed-tissues/2_variables/A_tda_frame.R')
source('~/topological-summaries-for-packed-tissues/2_variables/A_tda_frame.R')
cells_frame <- data.frame(type, PE.0.sub, PE.1.sub, landscape.0.2.sub,
landscape.0.5.sub, lan.0.05.sub, lan.0.10.sub,
lan.0.15.sub, landscape.1.1.sub, landscape.1.2.sub,
lan.1.03.sub, lan.1.05.sub, max.0.1.1.sub,
max.0.1.2.sub, max.0.1.3.sub, max.0.2.1.sub,
max.0.2.2.sub, max.0.2.3.sub,   MAX.0.2.10.sub,
max.1.1.1.sub, max.1.2.1.sub, max.1.1.2.sub,
MAX.1.1.02.sub, MAX.1.1.03.sub, PE.0.sup, PE.1.sup,
landscape.0.2.sup, lan.0.02.sup, lan.0.03.sup,
landscape.1.1.sup, landscape.1.2.sup, lan.1.02.sup,
max.0.1.1.sup, max.0.1.2.sup, MAX.0.1.02.sup,
max.0.2.1.sup, max.0.2.2.sup, MAX.0.2.02.sup,
max.1.1.1.sup, max.1.2.1.sup, MAX.1.1.02.sup,
MAX.1.2.02.sup, PE.0.rips, len.1, len.2, len.5,
LEN.15, LEN.20, LEN.50, max.0.1.1.rips, LEN.05,
LEN.10, max.0.1.2.rips, max.0.1.3.rips,
MAX.0.1.05.rips, MAX.0.1.10.rips, MAX.0.1.20.rips,
MAX.0.1.50.rips)
path <- paste("frames", as.character(cellNumber), sep="/")
dir.create(path,  showWarnings = FALSE)
save(cells_frame, file = paste(path, "cells_frame.RData", sep="/"))
source('~/topological-summaries-for-packed-tissues/2_variables/A_tda_frame.R')
